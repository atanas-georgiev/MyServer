@using Kendo.Mvc.UI
@model MyServer.Web.Main.Areas.ImageGalleryAdmin.Models.Album.AlbumDetailsViewModel

<select multiple="multiple" class="image-picker show-html show-labels">

    @foreach (var image in Model.Images)
    {
        <option data-img-src="@image.LowImageSource" value="@image.Id">@image.Info</option>
    }

</select>
<script>
    
    $(document).ready(function () {
        $("select").imagepicker();

        $(".mygallery").justifiedGallery({
            rowHeight: 200,
            maxRowHeight: 300,
            fixedHeight: false,
            margins: 2,
            lastRow: 'nojustify',
            captions: false,
            border: 0,
            thumbnailPath: function (currentPath, width, height) {
                if (Math.max(width, height) > 300) {
                    return currentPath.replace(/(.*)(_[a-z]+)(\..*)/, "$1Low$2");
                } else {
                    return currentPath.replace(/(.*)(_[a-z]+)(\..*)/, "$1Medium$2");
                }
            }
        });
    });
</script>


<div class="demo-section k-content wide">
    <br />
    <br />
    @(Html.Kendo().ListView(Model.Images)
          .Name("listImages")
          .TagName("div")
          .ClientTemplateId("template")
          .Editable()
          .Selectable(x => x.Mode(ListViewSelectionMode.Multiple))
          .Events(events => events.Change("onChange"))
          .DataSource(dataSource => dataSource.Model(model => model.Id("Id"))
                                        .PageSize(10)
                                        .Read(read => read.Action("ImagesGridRead", "Json"))
          //  .Create(create => create.Action("AlbumsCreate", "Json"))
          //  .Destroy(destroy => destroy.Action("AlbumsDestroy", "Json"))
          ))

    <button id="test-handler">SSSSS</button>
</div>

<script type="text/x-kendo-tmpl" id="template">
    <div class="product-view k-widget" style="width:400px;height:300px; background-image: url(#:LowImageSource#);background-size:contain; background-repeat: no-repeat">
        <dl class="b">
            <dt>Title</dt>
            <dd>#:Title#</dd>
        </dl>
        <div class="edit-buttons">
            <a class="k-button" href="/ImageGalleryAdmin/Album/Details/#:Id#"><span class="k-icon k-edit"></span></a>
            <a class="k-button k-delete-button" href="\\#"><span class="k-icon k-delete"></span></a>
        </div>
    </div>
</script>

<script>
    $( document ).ready(function() {
        $("#test-handler").click(function () {
            console.log("clicked");
            $(".product-view").addClass("k-state-selected");
        });
    });
    
    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            return JSON.stringify($(item));
        });

        console.log("Selected: " + selected.length + " item(s), [" + selected.join(", ") + "]");
    }

    $(function() {
        var listView = $("#listView").data("listAlbums");

        $(".k-add-button").click(function(e) {
            listView.add();
            e.preventDefault();
        });
    });
</script>

<style>
    .product-view {
        float: left;
        width: 50%;
        height: 300px;
        box-sizing: border-box;
        border-top: 0;
        position: relative;
    }

        .product-view:nth-child(even) {
            border-left-width: 0;
        }

        .product-view dl {
            margin: 10px 10px 0;
            padding: 0;
            overflow: hidden;
        }

        .product-view dt, dd {
            margin: 0;
            padding: 0;
            width: 100%;
            line-height: 24px;
            font-size: 18px;
        }

        .product-view dt {
            font-size: 11px;
            height: 16px;
            line-height: 16px;
            text-transform: uppercase;
            opacity: 0.5;
        }

        .product-view dd {
            height: 46px;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }

            .product-view dd .k-widget,
            .product-view dd .k-textbox {
                font-size: 14px;
            }

    .k-listview {
        border-width: 1px 0 0;
        padding: 0;
        overflow: hidden;
        min-height: 298px;
    }

    .edit-buttons {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        text-align: left;
        padding: 5px;
        background-color: rgba(0, 0, 0, 0.1);
    }

    .k-pager-wrap {
        border-top: 0;
    }

    span.k-invalid-msg {
        position: absolute;
        margin-left: 6px;
    }

    .k-add-button {
        margin-bottom: 2em;
    }

    @@media only screen and (max-width: 620px) {

        .product-view {
            width: 100%;
        }

            .product-view:nth-child(even) {
                border-left-width: 1px;
            }
    }
</style>


@*@{
    ViewBag.Title = "title";
}

<h2>title</h2>

<div class="well k-content">
    <h4 class="well-title">Album details</h4>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(false, string.Empty, new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2"></div>
                <div class="col-md-10">
                    <input type="submit" value="Update" class="k-edit-buttons"/>
                </div>
            </div>
        </div>
    }

</div>

<div class="well k-content">
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="editor-gps form-control"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <input type="button" value="Update" class="editor-gps-button editor-gps-button" />
            </div>
        </div>
    </div>
</div>

<div class="well k-content">
    <h4 class="well-title">Images</h4>
    <div class="demo-section k-content">
        @(Html.Kendo()
            .Upload()
            .Name("files")
            .Async(a => a.Save("Save", "Upload")
            .AutoUpload(true))
            .Events(ev => ev.Complete(@"function(e){setTimeout(function(){$('#ImagesGrid').data('kendoGrid').dataSource.read();$('#ImagesGrid').data('kendoGrid').refresh()})}")))
    </div>
    <hr />

    @(Html.Kendo().Grid<ImageDetailsViewModel>().Name("ImagesGrid").ColumnResizeHandleWidth(100).Columns(columns =>
{
    columns.Bound(p => p.Id).ClientTemplate("<input type=\"checkbox\" />");
    columns.Bound(c => c.FileName).Title("Image").ClientTemplate(
        @"<div class='customer-photo'>
        <img src=' " + Url.Content(Model.FullLowFileFolder) + @"#:FileName#' style='width: 162px'></div>");
    columns.Bound(p => p.Title);
    columns.Bound(p => p.GpsName);
    columns.Template(@<text></text>).ClientTemplate("<a class='k-button' href='" + Url.Action("UpdateAlbumCover", "Album") + @"/#:Id#'>Cover</a>");
    columns.Command(command => command.Destroy()).Width(150);
}).ToolBar(toolbar =>
{
    toolbar.Save();
}).Events(ev => ev.Remove(@"function(e){setTimeout(function(){$('#ImagesGrid').data('kendoGrid').dataSource.sync()})}"))
.Editable(editable => editable.Mode(GridEditMode.InCell))
          .DataSource(dataSource => dataSource.Ajax().Batch(true)
                                        .ServerOperation(false)
                                        .Model(model => model.Id(p => p.Id))
                                        .Read("ImagesGridRead", "Json")
                                        .Update("ImagesGridUpdate", "Json")
                                        .Destroy("ImagesGridDestroy", "Json"))
    )

</div>

<script>

    $(document).ready(function () {
        $(".editor-gps").geocomplete();
        $(".editor-gps-button").click(function () {
            var grid = $("#ImagesGrid").data("kendoGrid");
            var value = $(".editor-gps").val();
            var models = [];

            //find the selected models
            grid.tbody
                .find(":checked")
                .closest("tr")
                .each(function () {
                    models.push(grid.dataItem(this).Id);
                });



            var url = '@Url.Action("UpdateGpsData")';

            $.ajax({
                type: "POST",
                url: url,
                data: JSON.stringify( { "items": JSON.stringify(models), "location": value }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data) {
                    alert(data);
                    //submit the value to the server
                    grid.dataSource.sync();
                    
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });

        });
    });
</script>*@