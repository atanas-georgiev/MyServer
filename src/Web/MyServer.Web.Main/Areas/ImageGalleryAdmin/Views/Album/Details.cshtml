@using Kendo.Mvc.UI
@using MyServer.Web.Main.Areas.ImageGalleryAdmin.Models.Image
@model MyServer.Web.Main.Areas.ImageGalleryAdmin.Models.Album.AlbumDetailsViewModel

@{
    ViewBag.Title = "title";
}

<h2>title</h2>

<div class="well k-content">
    <h4 class="well-title">Album details</h4>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(false, string.Empty, new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2"></div>
                <div class="col-md-10">
                    <input type="submit" value="Update" class="k-edit-buttons"/>
                </div>
            </div>
        </div>
    }

</div>

<div class="well k-content">
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="editor-gps form-control"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <input type="button" value="Update" class="editor-gps-button editor-gps-button" />
            </div>
        </div>
    </div>
</div>

<div class="well k-content">
    <h4 class="well-title">Images</h4>
    <div class="demo-section k-content">
        @(Html.Kendo()
            .Upload()
            .Name("files")
            .Async(a => a.Save("Save", "Upload")
            .AutoUpload(true))
            .Events(ev => ev.Complete(@"function(e){setTimeout(function(){$('#ImagesGrid').data('kendoGrid').dataSource.read();$('#ImagesGrid').data('kendoGrid').refresh()})}")))
    </div>
    <hr />

    @(Html.Kendo().Grid<ImageDetailsViewModel>().Name("ImagesGrid").ColumnResizeHandleWidth(100).Columns(columns =>
{
    columns.Bound(p => p.Id).ClientTemplate("<input type=\"checkbox\" />");
    columns.Bound(c => c.FileName).Title("Image").ClientTemplate(
        @"<div class='customer-photo'>
        <img src=' " + Url.Content(Model.FullLowFileFolder) + @"#:FileName#' style='width: 162px'></div>");
    columns.Bound(p => p.Title);
    columns.Bound(p => p.GpsName);
    columns.Template(@<text></text>).ClientTemplate("<a class='k-button' href='" + Url.Action("UpdateAlbumCover", "Album") + @"/#:Id#'>Cover</a>");
    columns.Command(command => command.Destroy()).Width(150);
}).ToolBar(toolbar =>
{
    toolbar.Save();
}).Events(ev => ev.Remove(@"function(e){setTimeout(function(){$('#ImagesGrid').data('kendoGrid').dataSource.sync()})}"))
.Editable(editable => editable.Mode(GridEditMode.InCell))
          .DataSource(dataSource => dataSource.Ajax().Batch(true)
                                        .ServerOperation(false)
                                        .Model(model => model.Id(p => p.Id))
                                        .Read("ImagesGridRead", "Json")
                                        .Update("ImagesGridUpdate", "Json")
                                        .Destroy("ImagesGridDestroy", "Json"))
    )

</div>

<script>

    $(document).ready(function () {
        $(".editor-gps").geocomplete();
        $(".editor-gps-button").click(function () {
            var grid = $("#ImagesGrid").data("kendoGrid");
            var value = $(".editor-gps").val();
            var models = [];

            //find the selected models
            grid.tbody
                .find(":checked")
                .closest("tr")
                .each(function () {
                    models.push(grid.dataItem(this).Id);
                });



            var url = '@Url.Action("UpdateGpsData")';

            $.ajax({
                type: "POST",
                url: url,
                data: JSON.stringify( { "items": JSON.stringify(models), "location": value }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data) {
                    alert(data);
                    //submit the value to the server
                    grid.dataSource.sync();
                    
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });

        });
    });
</script>